plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.alibaba.arouter'
}
apply plugin: 'walle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.kc.mvvmcomponent"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        if (isBeta) {
            manifestPlaceholders.put('APP_NAME', "组件化-开发")
        }else {
            manifestPlaceholders.put('APP_NAME', "组件化-正式")
        }
        //设置多渠道打包维度
        //flavorDimensions "Free" //名字随便起，起啥都行
    }

    //签名-使用美团多渠道打包必须配置签名，不然回报错：空指针异常
    signingConfigs {
        release {
            storeFile file("appKey")
            storePassword "368396delie"
            keyAlias "key"
            keyPassword "368396delie"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release  //签名
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

   //多渠道打包(AS自带)
//    productFlavors {
//        baidu {}
//        xiaomi {}
//        qihu360 {}
//        yingyongbao {}
//        huawei {}
//    }
//    productFlavors.all {
//        flavor -> flavor.manifestPlaceholders = ["channel": name]
//    }
//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = "driver_${variant.productFlavors[0].name}_v${variant.versionName}.apk"
//        }
//    }

    dataBinding {
        enabled = true  //宿主模块一定要加上，不然无法生成impl类.
    }

    viewBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

//美团多渠道打包
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    println(project.getProjectDir())
    channelFile = new File("${project.getProjectDir()}/channel")
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //组件化配置
    implementation project(":library-base")
    if (isBuildModule.toBoolean()) {
        //当组件独立运行时，需要把基础库依赖到宿主app项目上
    } else {

        //如果是作为组件，需要把各个组件依赖到App宿主上

        // 启动页
        implementation project(":m-splash")
        // 首页
        implementation project(":m-home")
        // 用户
        implementation project(":m-my")
        // 公众号
        implementation project(":m-wx")
        // 广场
        implementation project(":m-square")
        // 项目
        implementation project(":m-project")
        // webView
        implementation project(":m-webview")
        // 搜索
        implementation project(":m-search")
        // 收藏
        implementation project(":m-collect")
        // debug
        implementation project(":m-debug")
    }

    //美团多渠道打包
    implementation 'com.meituan.android.walle:library:1.1.7'
}